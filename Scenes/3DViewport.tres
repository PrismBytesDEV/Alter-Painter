[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://ox4rsb15vq8y"]

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_uixtk"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8gx4w"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_5ray2"]
input_name = "inv_projection_matrix"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;




void fragment() {
// Input:5
	mat4 n_out5p0 = INV_PROJECTION_MATRIX;


// Input:4
	vec3 n_out4p0 = VERTEX;


// TransformVectorMult:3
	vec3 n_out3p0 = (n_out5p0 * vec4(n_out4p0, 1.0)).xyz;


// Output:0
	ALBEDO = n_out3p0;


}
"
graph_offset = Vector2(-311.719, 92.4545)
nodes/fragment/3/node = SubResource("VisualShaderNodeTransformVecMult_uixtk")
nodes/fragment/3/position = Vector2(180, 160)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_8gx4w")
nodes/fragment/4/position = Vector2(-160, 300)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_5ray2")
nodes/fragment/5/position = Vector2(-120, 220)
nodes/fragment/connections = PackedInt32Array(4, 0, 3, 1, 5, 0, 3, 0, 3, 0, 0, 0)
